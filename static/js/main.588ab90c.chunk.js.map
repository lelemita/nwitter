{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","Profile","userObj","refreshUser","useState","displayName","newDisplayName","setNewDisplayName","history","useHistory","onSubmit","event","a","preventDefault","updateProfile","currentUser","className","fakeLogIn","type","value","onChange","target","placeholder","autoFocus","style","marginTop","onClick","signOut","push","AuthForm","withOutLogIn","email","setEmail","pw","setPw","error","setError","newAccount","setNewAccount","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","provider","GithubAuthProvider","GoogleAuthProvider","signInWithPopup","icon","faGithub","faGoogle","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","updateDoc","doc","id","toggleEditing","onDeleteClick","window","confirm","deleteDoc","attachmentUrl","deleteObject","ref","backgroundColor","background","src","alt","align","Date","createdAt","toLocaleDateString","faTrash","faPencilAlt","NweetFactory","hsl","setHSL","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","resp","getDownloadURL","now","creatorId","addDoc","collection","document","querySelector","getHSLfromIP","axios","get","res","num","Number","data","IPv4","split","join","useEffect","maxLength","htmlFor","faPlus","accept","theFile","files","size","alert","reader","FileReader","onloadend","finishedEvent","result","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","onSnapshot","query","orderBy","snap","nweetArr","docs","map","Navigation","display","justifyContent","to","faTwitter","color","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","exact","path","App","setFakeLogIn","init","setInit","setUserObj","ip","setIP","getIP","phtotoURL","onAuthStateChanged","user","photoURL","Boolean","isLogOut","u","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.588ab90c.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\ninitializeApp(firebaseConfig);\r\n\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { updateProfile } from \"firebase/auth\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(\r\n    userObj.displayName ? userObj.displayName : \"\"\r\n  );\r\n  const history = useHistory();\r\n  const onLogOutClick = (event) => {\r\n    authService.signOut();\r\n    refreshUser(true);\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (newDisplayName !== userObj.displayName) {\r\n      await updateProfile(authService.currentUser, {\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {!userObj.fakeLogIn && (\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n          <input\r\n            type=\"text\"\r\n            value={newDisplayName}\r\n            onChange={onChange}\r\n            placeholder=\"Display Name\"\r\n            autoFocus\r\n            className=\"formInput\"\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Update Profile\"\r\n            className=\"formBtn\"\r\n            style={{\r\n              marginTop: 10,\r\n            }}\r\n          />\r\n        </form>\r\n      )}\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Sign Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = ({ withOutLogIn }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pw, setPw] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"pw\") {\r\n      setPw(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (newAccount) {\r\n        await createUserWithEmailAndPassword(authService, email, pw);\r\n      } else {\r\n        await signInWithEmailAndPassword(authService, email, pw);\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n  const onWithOutLogIn = (event) => {\r\n    withOutLogIn(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <span onClick={onWithOutLogIn} className=\"authSwitch\">\r\n        로그인 없이 사용하기\r\n      </span>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"pw\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={pw}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Log In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign in\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n} from \"firebase/auth\";\r\nimport { authService } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = ({ withOutLogIn }) => {\r\n  const onClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"github\") {\r\n      provider = new GithubAuthProvider();\r\n    } else if (name === \"google\") {\r\n      provider = new GoogleAuthProvider();\r\n    }\r\n    await signInWithPopup(authService, provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authBackground\">\r\n      <div className=\"authContainer\">\r\n        <AuthForm withOutLogIn={withOutLogIn} />\r\n        <div className=\"authBtns\">\r\n          <button onClick={onClick} name=\"github\" className=\"authBtn\">\r\n            Continue with <FontAwesomeIcon icon={faGithub} />\r\n          </button>\r\n          <button onClick={onClick} name=\"google\" className=\"authBtn\">\r\n            Continue with <FontAwesomeIcon icon={faGoogle} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import React, { useState } from \"react\";\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport { ref, deleteObject } from \"firebase/storage\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\r\n      if (nweetObj.attachmentUrl) {\r\n        await deleteObject(ref(storageService, nweetObj.attachmentUrl));\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"nweet\" style={{backgroundColor: nweetObj.background}}>\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={newNweet}\r\n                  onChange={onChange}\r\n                  placeholder=\"Edit your nweet\"\r\n                  required\r\n                  autoFocus\r\n                  className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n              </form>\r\n              <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancle\r\n              </button>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div>\r\n          <h3>{nweetObj.text}</h3>\r\n          <div className=\"nweetImg\">\r\n            {nweetObj.attachmentUrl && (\r\n              <img src={nweetObj.attachmentUrl} alt=\"attachment\" />\r\n            )}\r\n          </div>\r\n          <h4 align=\"right\"><sub>{nweetObj.displayName} ({new Date(nweetObj.createdAt).toLocaleDateString()})</sub></h4>\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Nweet;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport axios from \"axios\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [hsl, setHSL] = useState(\"\");\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n      const resp = await uploadString(attachmentRef, attachment, \"data_url\");\r\n      attachmentUrl = await getDownloadURL(resp.ref);\r\n    }\r\n    const nweetObj = {\r\n      attachmentUrl,\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      background: hsl,\r\n      displayName: userObj.displayName\r\n    };\r\n    await addDoc(collection(dbService, \"nweets\"), nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n    document.querySelector(\"#attach-file\").value = \"\";\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    if(theFile.size > 1024 * 1024) {\r\n      alert(\"Attach file size maximumm is 1MB.\");\r\n      document.querySelector(\"#attach-file\").value = \"\";\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        target: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = (event) => {\r\n    setAttachment(\"\");\r\n    document.querySelector(\"#attach-file\").value = \"\";\r\n  };\r\n  const getHSLfromIP = async () => {\r\n    const res = await axios.get('https://geolocation-db.com/json/')\r\n    const num = Number(res.data.IPv4.split(\".\").join(\"\"));\r\n    setHSL(`hsl(${num % 361}, ${num % 81 + 20}%, ${num % 21 + 70}%)`);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getHSLfromIP();\r\n    return () => {\r\n      setHSL(\"\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            alt=\"attachment\"\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import { dbService } from \"fbase\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { collection, orderBy, onSnapshot, query } from \"firebase/firestore\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n  useEffect(() => {\r\n    onSnapshot(\r\n      query(collection(dbService, \"nweets\"), orderBy(\"createdAt\", \"desc\")),\r\n      (snap) => {\r\n        const nweetArr = snap.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setNweets(nweetArr);\r\n      }\r\n    );\r\n    return () => {\r\n      setNweets([]);\r\n    };\r\n  }, [userObj]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\">\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 30,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          {/* <span style={{ marginTop: 10 }}>\r\n            {userObj && userObj.displayName} Profile\r\n          </span> */}\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser, withOutLogIn }) => {\r\n  return (\r\n    <Router>\r\n      {/* 로그인 되었을 때 Nav표시 */}\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        <>\r\n          {isLoggedIn ? (\r\n            <div className=\"RouterDiv\">\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n              </Route>\r\n            </div>\r\n          ) : (\r\n            <Route exact path=\"/\">\r\n              <Auth withOutLogIn={withOutLogIn} />\r\n            </Route>\r\n          )}\r\n        </>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"fbase\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [fakeLogIn, setFakeLogIn] = useState(false);\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  const [ip, setIP] = useState(\"\");\r\n  \r\n  const withOutLogIn = (fakeLogIn = true) => {\r\n    setFakeLogIn(fakeLogIn);\r\n  };\r\n  const getIP = async () => {\r\n    const res = await axios.get(\"https://geolocation-db.com/json/\");\r\n    setIP(res.data.IPv4);\r\n  };\r\n\r\n  const refreshUser = (isLogOut = false) => {\r\n    if (isLogOut) {\r\n      setUserObj(null);\r\n      setFakeLogIn(false);\r\n    } else if (fakeLogIn) {\r\n      setUserObj({\r\n        fakeLogIn: true,\r\n        displayName: ip,\r\n        phtotoURL: \"\",\r\n        uid: ip.split(\".\").join(\"\"),\r\n      });\r\n    } else {\r\n      const u = authService.currentUser;\r\n      setUserObj({\r\n        fakeLogIn: false,\r\n        displayName: u.displayName,\r\n        photoURL: u.photoURL,\r\n        uid: u.uid,\r\n      });\r\n    }\r\n  };\r\n  // component가 mount 될 때 실행\r\n  // firebase loading 시간이 모자라서 로그인 처리가 안되는 것 방지.\r\n  useEffect(() => {\r\n    // console.log(fakeLogIn);\r\n    if (fakeLogIn) {\r\n      getIP();\r\n      setUserObj({\r\n        fakeLogIn: true,\r\n        displayName: ip,\r\n        phtotoURL: \"\",\r\n        uid: ip.split(\".\").join(\"\"),\r\n      });\r\n      setInit(true);\r\n    } else {\r\n      authService.onAuthStateChanged((user) => {\r\n        if (user != null) {\r\n          setUserObj({\r\n            fakeLogIn: false,\r\n            displayName: user.displayName,\r\n            phtotoURL: user.photoURL,\r\n            uid: user.uid,\r\n          });\r\n        } else {\r\n          setUserObj(null);\r\n        }\r\n        setInit(true);\r\n      });\r\n    }\r\n  }, [fakeLogIn, ip]);\r\n\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter\r\n          isLoggedIn={Boolean(userObj) || fakeLogIn}\r\n          userObj={userObj}\r\n          refreshUser={refreshUser}\r\n          withOutLogIn={withOutLogIn}\r\n        />\r\n      ) : (\r\n        \"Initalizing...\"\r\n      )}\r\n      {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport \"./styles.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}